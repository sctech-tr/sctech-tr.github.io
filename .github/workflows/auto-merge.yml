name: Auto-merge user pages

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for changed user HTML files
        id: check_user_html
        run: |
          NEW_FILE=$(git diff --name-only origin/main | grep '^users/.*\.html$' || true)
          if [ -z "$NEW_FILE" ]; then
            echo "No new user HTML files found."
          else
            echo "New user HTML file: $NEW_FILE"
            if [ -f "$NEW_FILE" ]; then
              echo "The file $NEW_FILE already exists. Failing the job."
              exit 1
            fi
          fi

      - name: Auto Merge PR (if exactly one new file)
        if: steps.check_user_html.outputs == '1 new user HTML file found.'
        uses: "pascalgn/automerge-action@v0.16.3"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          mergeMethod: squash
          authorName: "GitHub Action"
          authorEmail: "action@github.com"

      - name: Add "new personal page" label (on success)
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['new personal page']
            });

      - name: Add "invalid" and "wontfix" labels (on failure)
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['invalid', 'wontfix']
            });
